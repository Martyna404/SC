#include <iostream>
#include <thread>

// Funktor jako struct (domy≈õlnie public)
struct Funktor {
    void operator()(std::string tekst) {
        std::cout << "[Function Object] Message: " << tekst << std::endl;
    }
};

// Klasa jako struct
struct Klasa {
    void metodaKlasy(std::string tekst) {
        std::cout << "[Class Method] Message: " << tekst << std::endl;
    }
};

int main() {
    std::thread watek1([](std::string tekst) {
        std::cout << "[Global Function] Message: " << tekst << std::endl;
        }, "Hello from Global Function");

    Funktor funktor;
    std::thread watek2(funktor, "Hello from Function Object");

    Klasa obiekt;
    std::thread watek3(&Klasa::metodaKlasy, &obiekt, "Hello from Class Method");

    std::thread watek4([](std::string tekst) {
        std::cout << "[Lambda Function] Message: " << tekst << std::endl;
        }, "Hello from Lambda Function");

    watek1.join();
    watek2.join();
    watek3.join();
    watek4.join();

    return 0;
}

